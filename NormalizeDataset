#function for converting a dataset to the proper format model training expects

import os
import shutil

root = "C:/Users/lurpd/Documents/Development/Datasets/DistractedDriverSet2/test"
images_dir = os.path.join(root)
annotations_path = os.path.join(root, "_annotations.txt")
classes_path = os.path.join(root, "_classes.txt")

#load class names from the file provided
with open(classes_path, "r") as f:
    classes = [line.strip() for line in f.readlines()]
print("Classes found:", classes)

#create output directories based off class names
output_root = os.path.join(root, "sorted")
os.makedirs(output_root, exist_ok=True)
for cls in classes:
    os.makedirs(os.path.join(output_root, cls), exist_ok=True)

#parse annotations from file given
with open(annotations_path, "r") as f:
    for line in f:
        parts = line.strip().split()
        if len(parts) < 2:
            continue
        
        filename = parts[0]
        coords = parts[1].split(",")
        if len(coords) < 5:
            continue
        
        class_id = int(coords[-1]) 
        cls_name = classes[class_id]

        src = os.path.join(images_dir, filename)
        dst_dir = os.path.join(output_root, cls_name)
        os.makedirs(dst_dir, exist_ok=True)

        if os.path.exists(src):
            dst = os.path.join(dst_dir, filename)
            shutil.copy(src, dst)
        else:
            print(f"⚠️ Missing image: {src}")
